name: Plan / Test On PR 

on:
  pull_request:
    branches:
      - master

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        path:
          - project1
          - project2

    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - uses: marceloprado/has-changed-path@v1
        id: changed
        with:
          paths: terraform/${{ matrix.path }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws-region }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.1

      - name: Initialize Terraform
        if: steps.changed.outputs.changed == 'true'
        continue-on-error: true
        run: |
          cd terraform/${{ matrix.path }}
          terraform init -backend="true" -backend-config="backend_stage.hcl" 

      - name: Plan Terraform
        if: steps.changed.outputs.changed == 'true'
        id: plan
        continue-on-error: true
        run: |
          cd terraform/${{ matrix.path }}
          terraform plan -var-file="stage.tfvars" -no-color -out=plan.tfplan \
          && terraform show -no-color plan.tfplan

      - run: echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt

      - uses: actions/upload-artifact@v2
        if: steps.changed.outputs.changed == 'true'
        with:
          name: ${{ matrix.path }}
          path: plan.txt

  post_plan:
    name: Post Plan
    needs: [plan]
    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - name: Download Plan Outputs
        continue-on-error: true
        uses: actions/download-artifact@v2

      - name: Put Plan Files in ENV Vars
        continue-on-error: true
        run: |
          PLAN1=$(cat project1/plan.txt)
          echo "PLAN1<<EOF" >> $GITHUB_ENV
          echo "$PLAN1" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          PLAN2=$(cat project2/plan.txt)
          echo "PLAN2<<EOF" >> $GITHUB_ENV
          echo "$PLAN2" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Post Plan to GitHub PR
        continue-on-error: true
        uses: mshick/add-pr-comment@v1
        with:
          allow-repeats: true
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## Plan1
            ```diff
            ${{ env.PLAN1 }}
            ```
            -----
            ## Plan2
            ```diff
            ${{ env.PLAN2 }}
            ```
            -----
            Merge to master to apply all of the above
            
